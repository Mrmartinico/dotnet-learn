//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyRepository
{
    using System;
    using System.Collections.Generic;
    
    public partial class FareProductItem
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public FareProductItem()
        {
            this.CardImageItem = new HashSet<CardImageItem>();
            this.Control = new HashSet<Control>();
            this.FareProductItemCardType = new HashSet<FareProductItemCardType>();
            this.FareProductItemCustomer = new HashSet<FareProductItemCustomer>();
            this.FareProductItemDescription = new HashSet<FareProductItemDescription>();
            this.FareProductItemDeviceSubType = new HashSet<FareProductItemDeviceSubType>();
            this.FareProductItemDeviceType = new HashSet<FareProductItemDeviceType>();
            this.FareProductItemFineReason = new HashSet<FareProductItemFineReason>();
            this.FareProductItemPaymentMethod = new HashSet<FareProductItemPaymentMethod>();
            this.FareProductItemProfile = new HashSet<FareProductItemProfile>();
            this.FareProductItemReduction = new HashSet<FareProductItemReduction>();
            this.FareProductItem1 = new HashSet<FareProductItem>();
            this.FareProductItem11 = new HashSet<FareProductItem>();
            this.GreenList = new HashSet<GreenList>();
            this.GreyList = new HashSet<GreyList>();
            this.IncompatibilityMatrix = new HashSet<IncompatibilityMatrix>();
            this.IncompatibilityMatrix1 = new HashSet<IncompatibilityMatrix>();
            this.Order_detail = new HashSet<Order_detail>();
            this.SaleDetail = new HashSet<SaleDetail>();
            this.InstallmentRenewed = new HashSet<InstallmentRenewed>();
            this.InstallmentRenewed1 = new HashSet<InstallmentRenewed>();
        }
    
        public long Id { get; set; }
        public long FareVersionId { get; set; }
        public long ProductId { get; set; }
        public long PriceId { get; set; }
        public Nullable<long> ExternalCodePriceId { get; set; }
        public Nullable<System.DateTime> StartValidity { get; set; }
        public Nullable<System.DateTime> EndValidity { get; set; }
        public Nullable<System.DateTime> StartSale { get; set; }
        public Nullable<System.DateTime> EndSale { get; set; }
        public Nullable<int> NumberOfTrips { get; set; }
        public Nullable<int> NumberOfTravellers { get; set; }
        public Nullable<int> MaxNumberOfCharges { get; set; }
        public string PrinterMask { get; set; }
        public bool IsRechargeable { get; set; }
        public bool IsMultipass { get; set; }
        public bool IsRefundable { get; set; }
        public bool IsPartiallyRefundable { get; set; }
        public bool IsRestorable { get; set; }
        public bool IsSuspendable { get; set; }
        public bool IsExtensible { get; set; }
        public bool IsRecyclable { get; set; }
        public bool IsAutoRenewable { get; set; }
        public bool IsPr { get; set; }
        public bool IsPv { get; set; }
        public Nullable<long> TemporalRestrictionId { get; set; }
        public Nullable<long> GeographicalRestrictionId { get; set; }
        public int FidelityPoints { get; set; }
        public Nullable<int> BscEncodingKey { get; set; }
        public Nullable<int> BscValidationKey { get; set; }
        public int MaxNumberSaleable { get; set; }
        public int MultivalidationTime { get; set; }
        public Nullable<long> AnnexProductTypeId { get; set; }
        public Nullable<int> ShowDay { get; set; }
        public Nullable<int> NumberOfItems { get; set; }
        public Nullable<long> SupportId { get; set; }
        public Nullable<long> RechargeCode { get; set; }
        public long InsOperId { get; set; }
        public System.DateTime InsDate { get; set; }
        public Nullable<System.DateTime> ModDate { get; set; }
        public Nullable<long> ModOperId { get; set; }
        public byte[] RV { get; set; }
        public bool IsDeleted { get; set; }
        public Nullable<long> MonthlyAnnexProductId { get; set; }
        public bool OnlyRecharge { get; set; }
    
        public virtual AnnexProductType AnnexProductType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CardImageItem> CardImageItem { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Control> Control { get; set; }
        public virtual ExternalCodePrice ExternalCodePrice { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemCardType> FareProductItemCardType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemCustomer> FareProductItemCustomer { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemDescription> FareProductItemDescription { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemDeviceSubType> FareProductItemDeviceSubType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemDeviceType> FareProductItemDeviceType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemFineReason> FareProductItemFineReason { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemPaymentMethod> FareProductItemPaymentMethod { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemProfile> FareProductItemProfile { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItemReduction> FareProductItemReduction { get; set; }
        public virtual FareVersion FareVersion { get; set; }
        public virtual GeographicalRestriction GeographicalRestriction { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItem> FareProductItem1 { get; set; }
        public virtual FareProductItem FareProductItem2 { get; set; }
        public virtual Price Price { get; set; }
        public virtual Product Product { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FareProductItem> FareProductItem11 { get; set; }
        public virtual FareProductItem FareProductItem3 { get; set; }
        public virtual TemporalRestriction TemporalRestriction { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GreenList> GreenList { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GreyList> GreyList { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IncompatibilityMatrix> IncompatibilityMatrix { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IncompatibilityMatrix> IncompatibilityMatrix1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order_detail> Order_detail { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SaleDetail> SaleDetail { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InstallmentRenewed> InstallmentRenewed { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InstallmentRenewed> InstallmentRenewed1 { get; set; }
    }
}
